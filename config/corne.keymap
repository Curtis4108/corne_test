/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <6 8 7 19 18 30 31 32 20 9 21 33 34 22 10 11 23 35 41 40 39>;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | ENT |   | SPC | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q        &kp W            &kp E         &kp R              &kp T          &kp Y        &kp U               &kp I                 &kp O             &kp P                &kp BSPC
&kp LCTRL  &hml LGUI A  &hml LEFT_ALT S  &hml LCTRL D  &hml LEFT_SHIFT F  &kp G          &kp H        &hmr RIGHT_SHIFT J  &hmr RIGHT_CONTROL K  &hmr RIGHT_ALT L  &hmr RIGHT_WIN SEMI  &kp SQT
&kp LSHFT  &kp Z        &kp X            &kp C         &kp V              &kp B          &kp N        &kp M               &kp COMMA             &kp DOT           &kp FSLH             &kp ESC
                                         &lt 3 ESCAPE  &lt 1 RALT         &lt 6 ENTER    &lt 4 SPACE  &lt 2 BACKSPACE     &lt 5 DEL
            >;
        };

        nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans        &trans     &trans     &trans       &kp LC(Y)   &kp LC(V)       &kp LC(C)      &kp LC(X)     &kp LC(Z)  &kp BSPC
&trans  &trans  &kp LEFT_ALT  &kp LCTRL  &kp LSHFT  &trans       &kp CAPS    &kp LEFT_ARROW  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &trans
&trans  &trans  &trans        &trans     &trans     &trans       &kp INSERT  &kp HOME        &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &trans
                              &none      &trans     &kp ENTER    &kp SPACE   &kp BACKSPACE   &kp DEL
            >;
        };

        num {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp LEFT_BRACKET  &kp N7        &kp N8        &kp N9        &kp RIGHT_BRACKET    &none   &none            &none      &none          &none  &kp BSPC
&kp LCTRL  &kp COLON         &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL            &none   &kp RIGHT_SHIFT  &kp RCTRL  &kp RIGHT_ALT  &none  &none
&kp LSHFT  &kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH            &none   &none            &none      &none          &none  &none
                                           &kp PERIOD    &kp N0        &kp MINUS            &trans  &trans           &trans
            >;
        };

        media {
            bindings = <
&soft_off  &bootloader  &trans        &trans     &trans          &trans    &trans          &trans              &trans             &trans           &trans         &trans
&trans     &trans       &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &trans    &bt BT_CLR_ALL  &kp RS(K_PREVIOUS)  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_FORWARD  &trans
&trans     &trans       &trans        &trans     &trans          &trans    &bt BT_CLR      &bt BT_SEL 0        &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3   &bt BT_SEL 4
                                      &trans     &trans          &trans    &kp K_STOP      &kp K_PLAY_PAUSE    &kp K_MUTE
            >;
        };

        sym {
            bindings = <
&trans  &kp LS(LBRC)   &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)   &kp LS(RPAR)     &trans  &trans     &trans     &trans    &trans  &trans
&trans  &kp LS(COLON)  &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &kp LS(PLUS)     &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &trans  &trans
&trans  &kp LS(TILDE)  &kp LS(EXCL)  &kp LS(AT)     &kp LS(POUND)  &kp LS(PIPE)     &trans  &trans     &trans     &trans    &trans  &trans
                                     &kp LS(LPAR)   &kp LS(RPAR)   &kp LS(UNDER)    &trans  &trans     &trans
            >;
        };

        fun {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8    &kp F9    &kp PRINTSCREEN    &trans  &trans     &trans     &trans    &trans  &trans
&trans  &kp F11  &kp F4  &kp F5    &kp F6    &kp SCROLLLOCK     &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &trans  &trans
&trans  &kp F10  &kp F1  &kp F2    &kp F3    &kp PAUSE_BREAK    &trans  &trans     &trans     &trans    &trans  &trans
                         &kp LALT  &kp LGUI  &kp SPACE          &trans  &trans     &trans
            >;
        };

        mouse {
            bindings = <
&trans  &trans  &trans    &trans     &trans     &trans    &kp LC(Y)  &kp LC(V)     &kp LC(C)     &kp LC(X)   &kp LC(Z)      &trans
&trans  &trans  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &trans     &kp LEFT      &kp DOWN      &kp UP      &kp RIGHT      &trans
&trans  &trans  &trans    &trans     &trans     &trans    &trans     &kp LC(LEFT)  &kp LC(DOWN)  &kp LC(UP)  &kp LC(RIGHT)  &trans
                          &trans     &trans     &trans    &mkp LCLK  &mkp MCLK     &mkp RCLK
            >;
        };
    };
};
